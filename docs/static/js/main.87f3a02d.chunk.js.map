{"version":3,"sources":["components/Filter.js","components/Header.js","components/GetIcon.js","components/CharacterCard.js","components/CharacterList.js","components/Principal.js","components/CharacterDetails.js","components/Warning.js","service/LocalStorage.js","components/App.js","service/GetDataFromApi.js","index.js"],"names":["Filter","data","valueName","species","onChangeName","onChangeSpecies","className","onSubmit","evt","preventDefault","name","type","value","onChange","placeholder","map","user","filter","item","index","array","indexOf","Header","GetIcon","props","title","GetIconDead","status","CharacterCard","card","src","image","alt","CharacterList","fail","sort","a","b","to","id","Principal","CharacterDetail","useParams","character","find","person","toString","episode","origin","Warning","GetLS","key","defaultData","localStorage","getItem","JSON","parse","SetLS","setItem","stringify","App","useState","setData","setFail","SetValueName","setSpecies","useEffect","fetch","then","response","json","results","length","characterArray","catch","path","exact","children","e","currentTarget","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.87f3a02d.chunk.js","sourcesContent":["import \"../styles/_form.scss\";\n\nfunction Filter({ data, valueName, species, onChangeName, onChangeSpecies }) {\n  return (\n    <form className=\"form\" onSubmit={(evt) => evt.preventDefault()}>\n      <input\n        className=\"form__input\"\n        name=\"name\"\n        type=\"text\"\n        value={valueName}\n        onChange={onChangeName}\n        placeholder=\"Buscar personaje\"\n      />\n      <select\n        className=\"form__select\"\n        name=\"species\"\n        value={species}\n        onChange={onChangeSpecies}\n      >\n        <option value=\"\">Especies</option>\n        {data\n          .map((user) => user.species)\n          // map → convierte el array de objeto en un array de cadena de texto\n          .filter((item, index, array) => {\n            return array.indexOf(item) === index;\n          })\n          // filter → indexOf buca el índice del primer elemento que encuentre que sea item. Devuelve true o false para cada elemtno que aparezca por primera vez. El tercer paŕametro es el array en sía sobre el que se está filtrando\n          .map((species) => (\n            <option key={species} value={species}>\n              {species}\n            </option>\n          ))}\n      </select>\n    </form>\n  );\n}\n\nexport { Filter };\n","import \"../styles/_header.scss\";\n\nfunction Header() {\n  return (\n    <header className=\"header\">\n      <h1 className=\"header__title\"> el Buscador</h1>\n    </header>\n  );\n}\n\nexport { Header };\n","const GetIcon = (props) => {\n  if (props.species === \"Human\") {\n    return <i className=\"far fa-user\" title=\"Humano\"></i>;\n  } else if (props.species === \"Alien\") {\n    return <i className=\"fab fa-reddit-alien\" title={props.species}></i>;\n  } else {\n    return <i className=\"fas fa-question\" title={props.species}></i>;\n  }\n};\n\nconst GetIconDead = (props) => {\n  if (props.status === \"Dead\") {\n    return <i className=\"far fa-dizzy\" title=\"Muerto\"></i>;\n  } else if (props.status === \"Alive\") {\n    return (\n      <i className=\"fab fa-creative-commons-sampling-plus\" title=\"Vivo\"></i>\n    );\n  } else {\n    return <i className=\"fas fa-question\" title=\"Desconocido\"></i>;\n  }\n};\n\nexport { GetIcon, GetIconDead };\n","import { GetIcon, GetIconDead } from \"./GetIcon\";\nimport PropTypes from \"prop-types\";\nimport \"../styles/_characterCard.scss\";\n\nfunction CharacterCard({ card }) {\n  return (\n    <>\n      <img className=\"img\" src={card.image} alt={card.name} />\n      <p className=\"text\">Nombre: {card.name}</p>{\" \"}\n      <p className=\"text\">\n        Especie: <GetIcon species={card.species} />\n      </p>\n      <p className=\"text\">\n        Status: <GetIconDead status={card.status} />{\" \"}\n      </p>\n    </>\n  );\n}\nexport { CharacterCard };\n\nCharacterCard.propTypes = {\n  name: PropTypes.string,\n  status: PropTypes.object,\n  species: PropTypes.object,\n};\n","import { CharacterCard } from \"./CharacterCard\";\nimport { Link } from \"react-router-dom\";\nimport \"../styles/_list.scss\";\n\nfunction CharacterList({ valueName, data, species, fail }) {\n  return (\n    <div className=\"list\">\n      {fail ? (\n        <p className=\"list__fail\">\n          El nombre {valueName} no ha sido encontrado\n        </p>\n      ) : (\n        <ul className=\"list__ul\">\n          {data\n            .filter((card) => {\n              if (!species) {\n                return true;\n              } else {\n                return species === card.species;\n              }\n            })\n            .sort(function (a, b) {\n              if (a.name > b.name) {\n                return 1;\n              }\n              if (a.name < b.name) {\n                return -1;\n              }\n              return 0;\n            })\n            .map((card) => (\n              <Link\n                className=\"list__link\"\n                to={`/characterdetails/${card.id}`}\n                key={card.id}\n              >\n                <li className=\"list__element\">\n                  <CharacterCard card={card} />\n                </li>\n              </Link>\n            ))}\n        </ul>\n      )}\n    </div>\n  );\n}\n\nexport { CharacterList };\n","import { Filter } from \"./Filter\";\nimport { Header } from \"./Header\";\nimport { CharacterList } from \"./CharacterList\";\n\nfunction Principal({\n  valueName,\n  onChangeName,\n  data,\n  species,\n  onChangeSpecies,\n  fail,\n}) {\n  return (\n    <body className=\"body\">\n      <Header />\n      <main className=\"main\">\n        <Filter\n          valueName={valueName}\n          onChangeName={onChangeName}\n          data={data}\n          species={species}\n          onChangeSpecies={onChangeSpecies}\n        />\n        <CharacterList fail={fail} data={data} />\n      </main>\n    </body>\n  );\n}\n\nexport { Principal };\n","import { useParams } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport { CharacterCard } from \"./CharacterCard\";\nimport PropTypes from \"prop-types\";\n\nfunction CharacterDetail({ data }) {\n  let { id } = useParams();\n  const character = data.find((person) => person.id.toString() === id);\n  if (character) {\n    return (\n      <div className=\"bodyDetails\">\n        <p className=\"arrowContainer\">\n          <Link to=\"/\">\n            <i className=\"far fa-arrow-alt-circle-left arrowLink\">Volver</i>\n          </Link>\n        </p>\n        <div className=\"details\">\n          <CharacterCard card={character} />\n          <p className=\"text\">Episodios: {character.episode}</p>\n          <p className=\"text\">{character.origin}</p>\n        </div>\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"bodyDetails\">\n        <Link to=\"/\">\n          <i className=\"far fa-arrow-alt-circle-left\"></i> Volver\n        </Link>\n        <p>Personaje no encontrado</p>\n      </div>\n    );\n  }\n}\nexport { CharacterDetail };\n\nCharacterDetail.propTypes = {\n  episode: PropTypes.number,\n  origin: PropTypes.string,\n};\n","import { Header } from \"./Header\";\nimport { Link } from \"react-router-dom\";\nimport \"../styles/_warning.scss\";\n\nfunction Warning() {\n  return (\n    <>\n      <Header />\n      <p className=\"\">\n        <Link to=\"/\">\n          <i className=\"far fa-arrow-alt-circle-left\">Volver</i>\n        </Link>\n      </p>\n      <p className=\"warning\"> Dirección no encontrada</p>\n    </>\n  );\n}\n\nexport { Warning };\n","function GetLS(key, defaultData) {\n  const data = localStorage.getItem(key);\n  if (data === null) {\n    return defaultData;\n  } else {\n    return JSON.parse(data);\n  }\n}\nfunction SetLS(key, value) {\n  localStorage.setItem(key, JSON.stringify(value));\n}\n\nexport { GetLS, SetLS };\n","import { Principal } from \"./Principal\";\nimport { useState, useEffect } from \"react\";\nimport {\n  GetDataFromApi,\n  GetDataFromApibyName,\n} from \"../service/GetDataFromApi\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { CharacterDetail } from \"./CharacterDetails\";\nimport { Warning } from \"./Warning\";\nimport { GetLS, SetLS } from \"../service/LocalStorage\";\nimport \"../styles/App.scss\";\n\nfunction App() {\n  const [data, setData] = useState(GetLS(\"characterArray\", []));\n  const [fail, setFail] = useState(false);\n  const [valueName, SetValueName] = useState(GetLS(\"filterName\", \"\"));\n  const [species, setSpecies] = useState(GetLS(\"filterSpecies\", \"\"));\n\n  useEffect(() => {\n    setFail(false);\n    if (valueName) {\n      GetDataFromApibyName(valueName)\n        .then((characterArray) => {\n          setData(characterArray);\n          SetLS(\"characterArray\", characterArray);\n        })\n        .catch(() => {\n          setFail(true);\n        });\n    } else {\n      GetDataFromApi().then((characterArray) => {\n        setData(characterArray);\n        SetLS(\"characterArray\", characterArray);\n      });\n    }\n  }, [valueName]); //con dependencia del valor del input\n\n  return (\n    <Router>\n      <Switch>\n        <Route\n          path=\"/\"\n          exact\n          children={\n            <Principal\n              data={data}\n              valueName={valueName}\n              onChangeName={(e) => {\n                SetValueName(e.currentTarget.value);\n                SetLS(\"filterName\", e.currentTarget.value);\n              }}\n              onChangeSpecies={(e) => {\n                setSpecies(e.currentTarget.value);\n                SetLS(\"filterSpecies\", e.currentTarget.value);\n              }}\n              species={species}\n              fail={fail}\n            />\n          }\n        />\n        <Route\n          path=\"/characterdetails/:id\"\n          children={<CharacterDetail data={data} />}\n        />\n        <Route path=\"\" children={<Warning />} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport { App };\n","function GetDataFromApi() {\n  const ENDPOINT = \"https://rickandmortyapi.com/api/character\";\n  return fetch(ENDPOINT)\n    .then((response) => response.json())\n    .then((response) =>\n      response.results.map((character) => {\n        return {\n          id: character.id,\n          name: character.name,\n          status: character.status,\n          species: character.species,\n          image: character.image,\n          episode: character.episode.length,\n          origin: character.origin.name,\n        };\n      })\n    );\n}\nfunction GetDataFromApibyName(name) {\n  const ENDPOINT = \"https://rickandmortyapi.com/api/character/?name=\";\n  return fetch(ENDPOINT + name)\n    .then((response) => response.json())\n    .then((response) =>\n      response.results.map((character) => {\n        return {\n          id: character.id,\n          name: character.name,\n          status: character.status,\n          species: character.species,\n          image: character.image,\n          episode: character.episode.length,\n          origin: character.origin.name,\n        };\n      })\n    );\n}\n\nexport { GetDataFromApi, GetDataFromApibyName };\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/index.css\";\nimport { App } from \"./components/App.js\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}