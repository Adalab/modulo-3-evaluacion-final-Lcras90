{"ast":null,"code":"import _slicedToArray from\"/home/lucia/Adalab/modulo-3-evaluacion-final-Lcras90/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{Principal}from\"./Principal\";import{useState,useEffect}from\"react\";import{GetDataFromApi,GetDataFromApibyName}from\"../service/GetDataFromApi\";import{HashRouter as Router,Switch,Route}from\"react-router-dom\";import{CharacterDetail}from\"./CharacterDetails\";import{Warning}from\"./Warning\";import{GetLS,SetLS}from\"../service/LocalStorage\";import\"../styles/App.scss\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var _useState=useState(GetLS(\"characterArray\",[])),_useState2=_slicedToArray(_useState,2),data=_useState2[0],setData=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),fail=_useState4[0],setFail=_useState4[1];var _useState5=useState(GetLS(\"filterName\",\"\")),_useState6=_slicedToArray(_useState5,2),valueName=_useState6[0],SetValueName=_useState6[1];var _useState7=useState(GetLS(\"filterSpecies\",\"\")),_useState8=_slicedToArray(_useState7,2),species=_useState8[0],setSpecies=_useState8[1];useEffect(function(){setFail(false);if(valueName){GetDataFromApibyName(valueName).then(function(characterArray){setData(characterArray);SetLS(\"characterArray\",characterArray);}).catch(function(){setFail(true);});}else{GetDataFromApi().then(function(characterArray){setData(characterArray);SetLS(\"characterArray\",characterArray);});}},[valueName]);//con dependencia del valor del input\nreturn/*#__PURE__*/_jsx(Router,{children:/*#__PURE__*/_jsxs(Switch,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",exact:true,children:/*#__PURE__*/_jsx(Principal,{data:data,valueName:valueName,onChangeName:function onChangeName(e){SetValueName(e.currentTarget.value);SetLS(\"filterName\",e.currentTarget.value);},onChangeSpecies:function onChangeSpecies(e){setSpecies(e.currentTarget.value);SetLS(\"filterSpecies\",e.currentTarget.value);},species:species,fail:fail})}),/*#__PURE__*/_jsx(Route,{path:\"/characterdetails/:id\",children:/*#__PURE__*/_jsx(CharacterDetail,{data:data})}),/*#__PURE__*/_jsx(Route,{path:\"\",children:/*#__PURE__*/_jsx(Warning,{})})]})});}export{App};","map":{"version":3,"sources":["/home/lucia/Adalab/modulo-3-evaluacion-final-Lcras90/src/components/App.js"],"names":["Principal","useState","useEffect","GetDataFromApi","GetDataFromApibyName","HashRouter","Router","Switch","Route","CharacterDetail","Warning","GetLS","SetLS","App","data","setData","fail","setFail","valueName","SetValueName","species","setSpecies","then","characterArray","catch","e","currentTarget","value"],"mappings":"2KAAA,OAASA,SAAT,KAA0B,aAA1B,CACA,OAASC,QAAT,CAAmBC,SAAnB,KAAoC,OAApC,CACA,OACEC,cADF,CAEEC,oBAFF,KAGO,2BAHP,CAIA,OAASC,UAAU,GAAIC,CAAAA,MAAvB,CAA+BC,MAA/B,CAAuCC,KAAvC,KAAoD,kBAApD,CACA,OAASC,eAAT,KAAgC,oBAAhC,CACA,OAASC,OAAT,KAAwB,WAAxB,CACA,OAASC,KAAT,CAAgBC,KAAhB,KAA6B,yBAA7B,CACA,MAAO,oBAAP,C,wFAEA,QAASC,CAAAA,GAAT,EAAe,CACb,cAAwBZ,QAAQ,CAACU,KAAK,CAAC,gBAAD,CAAmB,EAAnB,CAAN,CAAhC,wCAAOG,IAAP,eAAaC,OAAb,eACA,eAAwBd,QAAQ,CAAC,KAAD,CAAhC,yCAAOe,IAAP,eAAaC,OAAb,eACA,eAAkChB,QAAQ,CAACU,KAAK,CAAC,YAAD,CAAe,EAAf,CAAN,CAA1C,yCAAOO,SAAP,eAAkBC,YAAlB,eACA,eAA8BlB,QAAQ,CAACU,KAAK,CAAC,eAAD,CAAkB,EAAlB,CAAN,CAAtC,yCAAOS,OAAP,eAAgBC,UAAhB,eAEAnB,SAAS,CAAC,UAAM,CACde,OAAO,CAAC,KAAD,CAAP,CACA,GAAIC,SAAJ,CAAe,CACbd,oBAAoB,CAACc,SAAD,CAApB,CACGI,IADH,CACQ,SAACC,cAAD,CAAoB,CACxBR,OAAO,CAACQ,cAAD,CAAP,CACAX,KAAK,CAAC,gBAAD,CAAmBW,cAAnB,CAAL,CACD,CAJH,EAKGC,KALH,CAKS,UAAM,CACXP,OAAO,CAAC,IAAD,CAAP,CACD,CAPH,EAQD,CATD,IASO,CACLd,cAAc,GAAGmB,IAAjB,CAAsB,SAACC,cAAD,CAAoB,CACxCR,OAAO,CAACQ,cAAD,CAAP,CACAX,KAAK,CAAC,gBAAD,CAAmBW,cAAnB,CAAL,CACD,CAHD,EAID,CACF,CAjBQ,CAiBN,CAACL,SAAD,CAjBM,CAAT,CAiBiB;AAEjB,mBACE,KAAC,MAAD,wBACE,MAAC,MAAD,yBACE,KAAC,KAAD,EACE,IAAI,CAAC,GADP,CAEE,KAAK,KAFP,CAGE,QAAQ,cACN,KAAC,SAAD,EACE,IAAI,CAAEJ,IADR,CAEE,SAAS,CAAEI,SAFb,CAGE,YAAY,CAAE,sBAACO,CAAD,CAAO,CACnBN,YAAY,CAACM,CAAC,CAACC,aAAF,CAAgBC,KAAjB,CAAZ,CACAf,KAAK,CAAC,YAAD,CAAea,CAAC,CAACC,aAAF,CAAgBC,KAA/B,CAAL,CACD,CANH,CAOE,eAAe,CAAE,yBAACF,CAAD,CAAO,CACtBJ,UAAU,CAACI,CAAC,CAACC,aAAF,CAAgBC,KAAjB,CAAV,CACAf,KAAK,CAAC,eAAD,CAAkBa,CAAC,CAACC,aAAF,CAAgBC,KAAlC,CAAL,CACD,CAVH,CAWE,OAAO,CAAEP,OAXX,CAYE,IAAI,CAAEJ,IAZR,EAJJ,EADF,cAqBE,KAAC,KAAD,EACE,IAAI,CAAC,uBADP,CAEE,QAAQ,cAAE,KAAC,eAAD,EAAiB,IAAI,CAAEF,IAAvB,EAFZ,EArBF,cAyBE,KAAC,KAAD,EAAO,IAAI,CAAC,EAAZ,CAAe,QAAQ,cAAE,KAAC,OAAD,IAAzB,EAzBF,GADF,EADF,CA+BD,CAED,OAASD,GAAT","sourcesContent":["import { Principal } from \"./Principal\";\nimport { useState, useEffect } from \"react\";\nimport {\n  GetDataFromApi,\n  GetDataFromApibyName,\n} from \"../service/GetDataFromApi\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { CharacterDetail } from \"./CharacterDetails\";\nimport { Warning } from \"./Warning\";\nimport { GetLS, SetLS } from \"../service/LocalStorage\";\nimport \"../styles/App.scss\";\n\nfunction App() {\n  const [data, setData] = useState(GetLS(\"characterArray\", []));\n  const [fail, setFail] = useState(false);\n  const [valueName, SetValueName] = useState(GetLS(\"filterName\", \"\"));\n  const [species, setSpecies] = useState(GetLS(\"filterSpecies\", \"\"));\n\n  useEffect(() => {\n    setFail(false);\n    if (valueName) {\n      GetDataFromApibyName(valueName)\n        .then((characterArray) => {\n          setData(characterArray);\n          SetLS(\"characterArray\", characterArray);\n        })\n        .catch(() => {\n          setFail(true);\n        });\n    } else {\n      GetDataFromApi().then((characterArray) => {\n        setData(characterArray);\n        SetLS(\"characterArray\", characterArray);\n      });\n    }\n  }, [valueName]); //con dependencia del valor del input\n\n  return (\n    <Router>\n      <Switch>\n        <Route\n          path=\"/\"\n          exact\n          children={\n            <Principal\n              data={data}\n              valueName={valueName}\n              onChangeName={(e) => {\n                SetValueName(e.currentTarget.value);\n                SetLS(\"filterName\", e.currentTarget.value);\n              }}\n              onChangeSpecies={(e) => {\n                setSpecies(e.currentTarget.value);\n                SetLS(\"filterSpecies\", e.currentTarget.value);\n              }}\n              species={species}\n              fail={fail}\n            />\n          }\n        />\n        <Route\n          path=\"/characterdetails/:id\"\n          children={<CharacterDetail data={data} />}\n        />\n        <Route path=\"\" children={<Warning />} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport { App };\n"]},"metadata":{},"sourceType":"module"}